# nginxの実行ユーザをPHP-FPMの実行ユーザ(www.conf記載のユーザ)に設定する
# user  www-data;

# worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    # include       mime.types;
    # default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    # sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    # keepalive_timeout  65;

    #gzip  on;

    # server {
        # listen       80;
        # server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        # }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    # }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
        # 仮想サーバが使用するアドレス、ポートを指定
        listen      443 ssl;        # IPv4
        listen      [::]:443 ssl;   # IPv6

        # 仮想サーバで使用するホスト名を指定
        server_name toshota.42.fr;

        # サーバの公開ディレクトリを指定
        # $document_root の値になる
        root /var/www/html;

        #アクセスしてきたらデフォルトで返すファイルを指定する
        index index.php index.html index.htm;

        ssl_certificate     /etc/nginx/ssl/nginx.crt;	# 指定のパス
        ssl_certificate_key /etc/nginx/ssl/nginx.key;	# 指定のパス
        ssl_protocols       TLSv1.2 TLSv1.3;

        # テスト用にディレクトリリスニングをオンにする
        # autoindex on;

        # URIごとにどのファイルを配信するか設定
        location / {
            try_files $uri /index.php?$args;
        }

        # location ~ 「正規表現（大文字・小文字を区別する）でリクエストURLを照合する」の意．
        # ^(.+\.php) 「任意の文字列.phpで始まる」の意．「^は行の先頭」「.+は1文字以上の任意の文字列」＋「\.は.を文字として扱う」「()はキャプチャグループ．後で`$1`で参照できる」
        # (.*)$ 「0文字以上の任意の文字列で終わる」の意．「.*は0文字以上の任意の文字列」＋「$は行の末尾」
        location ~ ^(.+\.php)(.*)$ {
            # リクエストされたファイルが存在しない場合は404エラーを返す
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }

            ## FastCGIサーバ(wordpress)へリクエストをプロキシするための変数を設定する
            # 変数設定ファイルを読み込む
            include fastcgi_params;
            # キャプチャグループの一つ目(.+\.php)は$fastcgi_script_nameの値になる
            # キャプチャグループの二つ目(/.+)$は$fastcgi_path_infoの値になる
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # $fastcgi_script_nameをindex.phpに設定
            fastcgi_index index.php;
            # FastCGI サーバに渡されるべきパラメータを設定
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;

            ## FastCGIサーバのアドレスを設定する
            fastcgi_pass wordpress:9000;
        }
    }
}


# http {
#     server {
#         listen       443 ssl;
#         server_name  toshota.42.fr;

#         ssl_certificate      /etc/nginx/ssl/nginx.crt;	# 指定のパス
#         ssl_certificate_key  /etc/nginx/ssl/nginx.key;	# 指定のパス

#         root   /var/www/html;
#         index  index.php index.html index.htm;

#         location / {
#             try_files $uri $uri/ /index.php?$args;
#         }

#         location ~ \.php$ {
#             fastcgi_pass   wordpress:9000;  # wordpress コンテナに接続
#             fastcgi_index  index.php;
#             fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
#             include        fastcgi_params;
#         }
#     }
# }
